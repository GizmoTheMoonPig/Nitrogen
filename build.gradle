plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'io.github.0ffz.github-packages' version '[1,2)'
//    id 'io.github.p03w.machete' version '2.0.1'
}

version = "${mc_version}-${mod_version}-fabric"
group = 'com.aetherteam.nitrogen'

base {
    archivesName = mod_id
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

sourceSets {
    main {
        resources {
            srcDirs += [ 'src/main/generated' ]
        }
    }
}

loom {
    runs {
        datagen {
            inherit client
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${project.mod_id}"

            runDir "build/datagen"
        }
    }
}

//processResources {
//    exclude '.cache/'
//}
//
//machete {
//    jij.enabled = false
//    json.enabled = true
//    png.enabled = false
//    sourceFileStriping.enabled = false
//    lvtStriping.enabled = false
//}
//
//tasks.jar.finalizedBy('optimizeOutputsOfJar')

//tasks.sourceJar.finalizedBy('optimizeOutputsOfJar')

dependencies {
    minecraft "com.mojang:minecraft:${project.mc_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.mc_version}:${project.parchment_mappings}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    for (String module in project.porting_lib_modules.split(",")) {
        modApi "io.github.fabricators_of_create.Porting-Lib:$module:${project.porting_lib_version}"
    }

    modCompileOnly "mezz.jei:jei-${project.mc_version}-common:${project.jei_version}"
    modCompileOnly "mezz.jei:jei-${project.mc_version}-forge:${project.jei_version}"

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version"

    modCompileOnly "me.shedaniel.cloth:cloth-config-fabric:$cloth_config_version"
    modCompileOnly "dev.architectury:architectury-fabric:$architectury_version"
}

repositories {
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.architectury.dev/" }
    maven { url = "https://maven.parchmentmc.org" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://maven.ladysnake.org/releases" }
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_name,
                "Specification-Vendor"    : "The Aether Team",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.mod_name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "The Aether Team",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

compileJava {
    options.incremental = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.archivesBaseName
            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/The-Aether-Team/Nitrogen"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
